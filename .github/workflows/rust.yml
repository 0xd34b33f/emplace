name: emplace
on: [push]
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable, nightly]

    steps:
    - uses: hecrj/setup-rust-action@v1
      with:
        rust-version: ${{ matrix.rust }}
    - uses: actions/checkout@master
    - name: Run tests
      run: cargo test --verbose
      
  github_release:
    if: startsWith(github.ref, 'refs/tags/v')
    name: Create GitHub release [${{ matrix.target }}]
    needs: [test]
    strategy:
      fail-fast: false
      matrix:
        # In order to use different target names on parallel ubuntu builds,
        # we use `ubuntu-latest` and `ubuntu-18.04` to include them separately
        os: [ubuntu-latest, ubuntu-18.04, macOS-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: emplace
            name: emplace-x86_64-unknown-linux-gnu.tar.gz
          - os: emplace-18.04
            target: x86_64-unknown-linux-musl
            bin: emplace
            name: emplace-x86_64-unknown-linux-musl.tar.gz
          - os: macOS-latest
            target: x86_64-apple-darwin
            bin: emplace
            name: emplace-x86_64-apple-darwin.tar.gz
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}

      - name: Install musl tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: sudo apt-get install -y musl-tools

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Prepare build artifacts
        run: |
          strip target/${{ matrix.target }}/release/${{ matrix.bin }}
          cd target/${{ matrix.target }}/release
          if [[ "${{ matrix.os }}" == "windows-latest" ]]
          then
            7z a ../../../${{ matrix.name }} ${{ matrix.bin }}
          else
            tar czvf ../../../${{ matrix.name }} ${{ matrix.bin }}
          fi
          cd -
      - name: Create GitHub release ${{ matrix.target }}
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.name }}
          body_path: RELEASE.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
